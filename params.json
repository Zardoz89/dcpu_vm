{"name":"DCPU VM","tagline":"Another DCPU-16 Virtual Machine","body":"DCPU VM\r\n=======\r\nMulti-platform DCPU-16 Virtual Machine\r\n-----------------------------------\r\n\r\nNote that this VM is aimed to implement and test some of the proposed hardware devices of the [Trillek project](http://trillek.org/).\r\nIn addition, includes some extra tools.\r\n\r\n\r\nBased on [Benedek Vartok VM](https://bitbucket.org/benedek/dcpu-16/overview)\r\n\r\n\r\nCOMPILATION\r\n-----------\r\n\r\n    mkdir build\r\n    cd build\r\n    cmake ..\r\n    make\r\n    \r\nTo make a Release build (compiling with optimizations):\r\n\r\n    cmake -DCMAKE_BUILD_TYPE=Release ..\r\n    \r\nTo make a Debug build:\r\n\r\n    cmake -DCMAKE_BUILD_TYPE=Debug ..\r\n\r\nRun **make install** to copy the executable to the root of the project\r\nThis project fork is made to run perfectly on windows without boost\r\n\r\nRUNNING\r\n-------\r\n\r\nJust type **dcpu-vm --help** to get these infos.\r\n\r\n    dcpu-vm 0.1\r\n    usage : dcpu-vm [-options] <dcpu16-exe>\r\n    --------------------------------------------------------\r\n      options:\r\n        -assemble (-a) : assemble before load (experimental)\r\n        -output <filename> (-o) : output assembled filename\r\n        -debug (-d) : start in debug mode\r\n                F1  : next step\r\n                F2  : print CPU status\r\n                System + F12 : switch debug/run\r\n        -time (-t) : use timed emulation (else refresh based)\r\n        -vsync (-v) : use vertical synchronisation\r\n                        (more accurate but may bug)\r\n      Hardware loadout options:\r\n        -loadout (-l) : XML file that describes hardware loadout. If isn't using\r\n                a loadout file, then a default loadout will be used. The default\r\n                loadout contains a generic clock, a generic keyboard, a monitor,\r\n                a floppy drive and a sound speaker.\r\n                The next options will be used to change the default loadout of\r\n                the virtual machine.\r\n        --monitor=<monitor_name> : use the following monitor\r\n                1802 -> Lem1802 (default) [c] (-1802)\r\n                1803 -> Lem1803 [c] (-1803)\r\n                cgm -> Colour Graphics Monitor (-cgm)\r\n                [c] : compatible with Lem1802 0x10c programs\r\n        --no-sound : disable the sound speaker device\r\n        -floppy <filenames...> (-fd) : floppy image files\r\n\r\n\r\n\r\nThere is a debug/step mode that can be activated and deactivated with **System+F12**:\r\n \r\n - **F1** : Single step (print the current instruction on the console)\r\n - **F2** : Print registers states into console\r\n\r\nAvailable shortcuts all-time: \r\n\r\n - **F3** : Reset the DCPU\r\n - **F9** : Ejects/Inserts a floppy (warring! Uses the same disk image for all floppy devices!)\r\n - **System+F12** : Activate/Deactivate debug mode. Note that System is Windows/Apple/Super key\r\n\r\nLOAD-OUT DESCRIPTION FILES\r\n--------------------------\r\nA custom device load-out can be set using a XML file describing what devices will be used. The XML file follow this structure :\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <loadout>\r\n      <hardware>\r\n        <device type=\"GenericClock\" />\r\n        <device type=\"GenericKeyboard\" />\r\n        <device type=\"M35FD\" />\r\n        <device type=\"LEM1803\" />\r\n        <device type=\"CGM1084\" />\r\n        <device type=\"SimpleSpeaker\" />\r\n      </hardware>\r\n    </loadout>\r\n\r\nThe devices will be loaded in the same order that is in the XML file. Also can read the load-out from a **.10csln** solution file from **DevKit**.\r\nActually admit this device list:\r\n\r\n- **GenericClock** : Generic Clock\r\n- **GenericKeyboard** : Generic Keyboard\r\n- **M35FD** : Mackpar 3.5\" Floppy drive\r\n- **LEM1802** : LEM 1802 monitor\r\n- **LEM1803** : LEM 1803 monitor\r\n- **CGM1084** : CGM 1084 monitor\r\n- **SimpleSpeaker** : Basic buzzer / IBM PC like speaker device\r\n\r\nTODO\r\n----\r\n\r\n - Manager of floppy disks in use.\r\n - Implemente BadSector bitmap for floppies\r\n - A tool to create floppies and fill/copy data to it.\r\n - GUI of the floppy drive to eject and insert different floppies.\r\n - Several optimizations on rendering monitor loops\r\n - Rename variables/namespaces with a convention -> Apply code convention of Trillek proyect more strictly.\r\n - More options to Debug mode\r\n - DCPU manager and separated graphic rendering threads\r\n - Correct bad English :P\r\n \r\n \r\nTOOLS\r\n=====\r\n\r\nPBM2FONT\r\n--------\r\nPBM2FONT is a small tool to create LEM180x and CGM 1084 fonts. It uses a ASCII **PBM** image file to create the HEX data values that represents the font.\r\n\r\n### RUN\r\n\r\nJust type **pbm2font --help** to get these infos.\r\n\r\n    usage : pbm2font [-options] <input-file>\r\n    --------------------------------------------------------\r\n      options:\r\n        -output <filename> (-o) : output filename\r\n        -charset=<charset_type> : use the following charset type\r\n                4x8 -> Generates 4x8 font charset\r\n                8x8 -> Generates 8x8 font charset\r\n        -format=<output_format> : use the following format\r\n                dat -> Uses universal .dat output format\r\n                hex_dump -> Generates a hexadecimal dump\r\n                By default, the ouput format is \"dat\" and the charset is 4x8\r\n                \r\nIf no output file has been chosen, then it will write to standard out.\r\n\r\n### HOW IT WORKS\r\n\r\nPBM2FONT reads the PBM file, and makes a grid of 4x8, or 8x8 cells. Each cell is converted to the appropriate format for 4x8 or 8x8 fonts. So to generate a font, you only need to use a graphics editor program that outputs ASCII PBM files (for example The Gimp), and set a grid of 4x8 or 8x8. Then you only need to draw each character in black and white and save the file.\r\n\r\n![Creating a font with The Gimp](https://raw.github.com/Zardoz89/dcpu_vm/gh-pages/images/gimp_font.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}